[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src/api"]

[project]
name = "tome-of-knowledge"
version = "1.0.0"
description = "Learn all about your DOTA gameplay."
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "boonhapus", email = "me@boonhap.us"},
]
maintainers = [
    {name = "boonhapus", email = "me@boonhap.us"},
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "litestar == 2.1.1",

    # version specific
    "taskgroup; python_version < '3.11.0'",
    "strenum >= 0.4.9; python_version < '3.11.0'",
]

[project.optional-dependencies]
dev = [
    # local dev
    "litestar[cli]",
    "python-dotenv",

    # code quality
    "pre-commit",
    "ruff",
    "mypy",
    "creosote",

    # tests
    "nox",
    "ward",
    "coverage[toml]",
]

[tool.ruff]
line-length = 120
select = [
    "A",     # flake8-builtins: https://pypi.org/project/flake8-builtins/
    "ARG",   # flake8-unused-arguments: https://pypi.org/project/flake8-unused-arguments/
    "B",     # flake8-bugbear: https://pypi.org/project/flake8-bugbear/
    "C4",    # flake8-comprehensions: https://pypi.org/project/flake8-comprehensions/
    "C90",   # mccabe: https://pypi.org/project/mccabe/
    "COM",   # flake8-commas: https://pypi.org/project/flake8-commas/
    "E",     # pycodestyle: https://pypi.org/project/pycodestyle/
    "F",     # pyflakes: https://pypi.org/project/pyflakes/
    "Q",     # flake8-quotes: https://pypi.org/project/flake8-quotes/
    "RUF",   # ruff-specific: https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
    "TCH",   # flake8-type-checking: https://pypi.org/project/flake8-type-checking/
]
ignore = [
    "TCH002",  # Litestar uses all the typing information, so it must be available at runtime
]
src = ["src"]
exclude = [
    "__pycache__",   # ignore compiled bytecode
    ".venv*",        # ignore virtual environments
    ".nox",          # ignore virtual environments
]
